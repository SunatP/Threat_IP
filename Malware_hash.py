import requests
import datetime as dt
import pandas as pd
import shutil
import os 
import pathlib
import errno
from datetime import date, datetime

"""
Download dataset and move file to path
"""
today = dt.date.today()
url = "https://bazaar.abuse.ch/export/csv/recent/"
dataset = requests.get(url,allow_redirects=True)
print("sending request...")
open(("Malware_Hash.csv"),'wb').write(dataset.content)
print("file was written")
# Path lib should make the directory which mean override the existed path
pathlib.Path('Malware_Hash_dataset').mkdir(exist_ok=True)
print("directory created")
# move downloaded file to dest folder
shutil.move("Malware_Hash.csv",("Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv"))


"""
Change Permission -> 777
"""
try:
    os.chmod("/home/sunat/FortiSIEM/Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv",0o777)
    print("Change Perm completed")
except:
    print("File Not Found")
# try:
#     os.replace(("/home/sunat/FortiSIEM/Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv"),("/home/sunat/FortiSIEM/Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv"))
# except:
#     print("Cannot replace file")

"""
Edit dataset and write to new file
"""

with open(("Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv"),"r",encoding="utf-8") as file:
    data = file.readlines()

for i in range(0,9,1): # replacing data
    print(data[i])
    data[i] = ""

data[0]= '"first_seen_utc","sha256_hash","md5_hash","sha1_hash","reporter","file_name","file_type_guess","mime_type","signature","clamav","vtpercent","imphash","ssdeep","tlsh"\n'
# Slicing index 
print(data[-1:])
data[-1:] = ""

with open(("Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv"), 'w',encoding="utf-8") as file:
    file.writelines( data )

"""
Read csv file using pandas
"""
df = pd.read_csv("Malware_Hash_dataset/Malware_Hash_"+str(today)+".csv",error_bad_lines=False, warn_bad_lines=False)

"""
Drop unused columns
"""
new_df = df.drop(['reporter','clamav','imphash', 'ssdeep', 'tlsh'],axis=1)

"""
Edit timestamp
"""
new_df["first_seen_utc"] = new_df["first_seen_utc"].str.replace(r"(\d+)(:)(\d+):(\d+)","",regex=True)
new_df["first_seen_utc"] = new_df["first_seen_utc"].str.replace(r"-","/",regex=True)

"""
Edit header of each column
"""

new_df['Botnet Name'] = new_df['file_name']
new_df['Algorithm'] = ['SHA256'] * new_df.shape[0]
new_df['Controller IP'] = [" "] * new_df.shape[0]
new_df["Malware Type"] = new_df['signature'] 
new_df["Confidence"] = new_df['vtpercent']
new_df['Severity'] = [" "] * new_df.shape[0]
new_df["ASN"] = [" "] * new_df.shape[0]
new_df["Org"] = [" "] * new_df.shape[0]
new_df["Country"] = [" "] * new_df.shape[0]
new_df["Description"] = ["MalwareBazaar recent malware samples"] * new_df.shape[0]
new_df["Date Found"] = new_df['first_seen_utc']
new_df['Hash Code'] = new_df['sha256_hash']
new_df['Hash Code_1'] = new_df['md5_hash']
new_df['Hash Code_2'] = new_df['sha1_hash']

"""
Create data for SHA256
"""
new_sha256 = new_df.drop(['sha256_hash', 'md5_hash', 'sha1_hash', 'file_name',
       'file_type_guess', 'mime_type', 'signature', 'vtpercent','Hash Code_1',
       'Hash Code_2'],axis=1)

"""
Change/Move Column header name
"""

new_sha256.columns=['Last Seen', 'Botnet Name', 'Algorithm', 'Controller IP',
       'Malware Type', 'Confidence', 'Severity', 'ASN', 'Org', 'Country',
       'Description','Date Found', 'Hash Code']
new_sha256 = new_sha256[['Botnet Name', 'Algorithm','Hash Code','Controller IP', 'Malware Type',
 'Confidence','Severity' ,'ASN', 'Org', 'Country','Description' ,'Date Found','Last Seen']]

"""
Export Malware Hash SHA256
"""
export_date = datetime.today().strftime('%Y-%m-%d-%H-%M-%S')
new_sha256.to_csv (r'Malware_Hash_dataset/Malware_SHA256_out_'+str(export_date)+'.csv', index = False, header=True, encoding="utf-8-sig")
print("OK at",export_date)

"""
Re-Use dataframe for MD5 and SHA1 hash
"""

new_md5_hash = new_df.drop(['sha256_hash', 'md5_hash', 'sha1_hash', 'file_name',
       'file_type_guess', 'mime_type', 'signature', 'vtpercent','Hash Code','Hash Code_2'],axis=1)

new_md5_hash['Algorithm'] = ['MD5'] * new_md5_hash.shape[0]
"""
Rename header
"""
new_md5_hash.columns=['Last Seen', 'Botnet Name', 'Algorithm', 'Controller IP',
       'Malware Type', 'Confidence', 'Severity', 'ASN', 'Org', 'Country',
       'Description','Date Found', 'Hash Code']

"""
Move header
"""
new_md5_hash = new_md5_hash[['Botnet Name', 'Algorithm','Hash Code','Controller IP', 'Malware Type',
 'Confidence','Severity' ,'ASN', 'Org', 'Country','Description' ,'Date Found','Last Seen']]

"""
Export File
"""
new_md5_hash.to_csv (r'Malware_Hash_dataset/Malware_MD5_out_'+str(export_date)+'.csv', index = False, header=True, encoding="utf-8-sig")
print("OK at",export_date)

"""
Re-used for SHA1
"""
new_sha1_hash = new_df.drop(['sha256_hash', 'md5_hash', 'sha1_hash', 'file_name',
       'file_type_guess', 'mime_type', 'signature', 'vtpercent','Hash Code','Hash Code_1'],axis=1)
"""
Assign value to Algorithm row
"""
new_sha1_hash['Algorithm'] = ['SHA1'] * new_sha1_hash.shape[0]

"""
Rename header 
"""
new_sha1_hash.columns=['Last Seen', 'Botnet Name', 'Algorithm', 'Controller IP',
       'Malware Type', 'Confidence', 'Severity', 'ASN', 'Org', 'Country',
       'Description','Date Found', 'Hash Code']

"""
Re-arrange header
"""
new_sha1_hash = new_sha1_hash[['Botnet Name', 'Algorithm','Hash Code','Controller IP', 'Malware Type',
 'Confidence','Severity' ,'ASN', 'Org', 'Country','Description' ,'Date Found','Last Seen']]

"""
Export file
"""
new_sha1_hash.to_csv (r'Malware_Hash_dataset/Malware_SHA1_out_'+str(export_date)+'.csv', index = False, header=True, encoding="utf-8-sig")
print("OK at",export_date)